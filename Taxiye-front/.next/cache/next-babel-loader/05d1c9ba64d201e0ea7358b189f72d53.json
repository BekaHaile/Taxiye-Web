{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kal/Documents/Development/Taxiye-front/pages/articles/[id].tsx\";\nimport React, { useState } from 'react';\nimport Article from \"../../components/articles/single\";\nimport Banner from \"../../components/hero/\";\nimport { useQuery } from \"react-query\";\nexport async function getServerSideProps(context) {\n  const {\n    id\n  } = context.query;\n  const {\n    NEXT_PUBLIC_HOST\n  } = process.env;\n  const resArticlePage = await fetch(`${NEXT_PUBLIC_HOST}/article-page`);\n  const articlePageData = await resArticlePage.json();\n  const articleRes = await fetch(`${NEXT_PUBLIC_HOST}/articles/${id}`);\n  const articlesData = await articleRes.json();\n  const popularRes = await fetch(`${NEXT_PUBLIC_HOST}/articles/?featured=true`);\n  const popularArticlesData = await popularRes.json();\n  return {\n    props: {\n      articlePage: articlePageData,\n      article: articlesData,\n      populars: popularArticlesData\n    }\n  };\n}\nexport default function articles({\n  articlePage,\n  article,\n  populars\n}) {\n  const {\n    0: searchText,\n    1: setSearching\n  } = useState(\"\");\n  const {\n    data,\n    status\n  } = useQuery(['articles', {\n    content: searchText\n  }], getSearch, {\n    initialData: articles\n  });\n  let hero = {\n    background: articlePage.hero.background,\n    title: `${article.headerTitle}`,\n    subTitle: \"\",\n    text: `${article.headeeTitle}`\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      hero: hero,\n      children: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Article, {\n      article: article,\n      featured: populars\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/kal/Documents/Development/Taxiye-front/pages/articles/[id].tsx"],"names":["React","useState","Article","Banner","useQuery","getServerSideProps","context","id","query","NEXT_PUBLIC_HOST","process","env","resArticlePage","fetch","articlePageData","json","articleRes","articlesData","popularRes","popularArticlesData","props","articlePage","article","populars","articles","searchText","setSearching","data","status","content","getSearch","initialData","hero","background","title","headerTitle","subTitle","text","headeeTitle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAuBC,OAAO,CAACC,GAArC;AACA,QAAMC,cAAc,GAAG,MAAMC,KAAK,CAAE,GAAEJ,gBAAiB,eAArB,CAAlC;AACA,QAAMK,eAAe,GAAG,MAAMF,cAAc,CAACG,IAAf,EAA9B;AACA,QAAMC,UAAU,GAAG,MAAMH,KAAK,CAAE,GAAEJ,gBAAiB,aAAYF,EAAG,EAApC,CAA9B;AACA,QAAMU,YAAY,GAAG,MAAMD,UAAU,CAACD,IAAX,EAA3B;AACA,QAAMG,UAAU,GAAG,MAAML,KAAK,CAAE,GAAEJ,gBAAiB,0BAArB,CAA9B;AACA,QAAMU,mBAAmB,GAAG,MAAMD,UAAU,CAACH,IAAX,EAAlC;AACA,SAAO;AACLK,IAAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAEP,eADR;AAELQ,MAAAA,OAAO,EAACL,YAFH;AAGLM,MAAAA,QAAQ,EAAEJ;AAHL;AADF,GAAP;AAOD;AAGD,eAAe,SAASK,QAAT,CAAkB;AAAEH,EAAAA,WAAF;AAAeC,EAAAA,OAAf;AAAuBC,EAAAA;AAAvB,CAAlB,EAAsD;AACnE,QAAM;AAAA,OAACE,UAAD;AAAA,OAAaC;AAAb,MAA6BzB,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM;AAAE0B,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBxB,QAAQ,CAAC,CAAC,UAAD,EAAa;AAAEyB,IAAAA,OAAO,EAAEJ;AAAX,GAAb,CAAD,EAAwCK,SAAxC,EAAmD;AAAEC,IAAAA,WAAW,EAAEP;AAAf,GAAnD,CAAjC;AAEA,MAAIQ,IAAI,GAAG;AACTC,IAAAA,UAAU,EAAEZ,WAAW,CAACW,IAAZ,CAAiBC,UADpB;AAETC,IAAAA,KAAK,EAAG,GAAEZ,OAAO,CAACa,WAAY,EAFrB;AAGTC,IAAAA,QAAQ,EAAE,EAHD;AAITC,IAAAA,IAAI,EAAG,GAAEf,OAAO,CAACgB,WAAY;AAJpB,GAAX;AAOA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEN,IAAd;AAAoB,MAAA,QAAQ,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEV,OAAlB;AAA2B,MAAA,QAAQ,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAOD","sourcesContent":["import React, {useState} from 'react';\nimport Article from \"../../components/articles/single\";\nimport Banner from \"../../components/hero/\";\nimport { useQuery } from \"react-query\";\n\n\nexport async function getServerSideProps(context) {\n  const { id } = context.query;\n  const { NEXT_PUBLIC_HOST } = process.env;\n  const resArticlePage = await fetch(`${NEXT_PUBLIC_HOST}/article-page`);\n  const articlePageData = await resArticlePage.json();\n  const articleRes = await fetch(`${NEXT_PUBLIC_HOST}/articles/${id}`);\n  const articlesData = await articleRes.json();\n  const popularRes = await fetch(`${NEXT_PUBLIC_HOST}/articles/?featured=true`);\n  const popularArticlesData = await popularRes.json();\n  return {\n    props: {\n      articlePage: articlePageData,\n      article:articlesData,\n      populars: popularArticlesData\n    },\n  };\n}\n\n\nexport default function articles({ articlePage, article,populars  }) {\n  const [searchText, setSearching] = useState(\"\");\n  const { data, status } = useQuery(['articles', { content: searchText }], getSearch, { initialData: articles });\n\n  let hero = {\n    background: articlePage.hero.background,\n    title: `${article.headerTitle}`,\n    subTitle: \"\",\n    text: `${article.headeeTitle}`,\n  };\n\n  return (\n    <>\n      <Banner hero={hero} children={null} />\n      <Article article={article} featured={populars} />\n    </>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}