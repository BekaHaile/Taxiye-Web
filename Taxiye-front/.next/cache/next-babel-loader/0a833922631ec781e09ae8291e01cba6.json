{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kal/Documents/Development/Taxiye-front/pages/login/index.tsx\";\nimport React from 'react';\nimport Login from '../../components/account/login';\nimport { gql } from '@apollo/client';\nimport client from \"../../backend-client\";\nimport DefaultErrorPage from 'next/error';\nconst query = gql`\nquery{\n    loginPage{\n      hero{\n        title\n        background{\n          url\n        }\n      }\n    }\n  }\n`;\nexport async function getServerSideProps() {\n  try {\n    const {\n      data,\n      error\n    } = await client.query({\n      query: query\n    });\n    return {\n      props: {\n        data: data,\n        error: error\n      }\n    };\n  } catch (e) {\n    return {\n      props: {\n        error: true\n      }\n    };\n  }\n}\n\nconst login = ({\n  data,\n  error\n}) => {\n  if (error) return /*#__PURE__*/_jsxDEV(DefaultErrorPage, {\n    statusCode: 404\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Login, {\n    hero: data.loginPage.hero\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n\nexport default login;","map":{"version":3,"sources":["/home/kal/Documents/Development/Taxiye-front/pages/login/index.tsx"],"names":["React","Login","gql","client","DefaultErrorPage","query","getServerSideProps","data","error","props","e","login","loginPage","hero"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,gBAAP,MAA6B,YAA7B;AAEA,MAAMC,KAAK,GAAGH,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAYA,OAAO,eAAeI,kBAAf,GAAoC;AACzC,MAAG;AACD,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkB,MAAML,MAAM,CAACE,KAAP,CAAa;AACzCA,MAAAA,KAAK,EAAEA;AADkC,KAAb,CAA9B;AAGA,WAAO;AACLI,MAAAA,KAAK,EAAE;AACLF,QAAAA,IAAI,EAAEA,IADD;AAELC,QAAAA,KAAK,EAACA;AAFD;AADF,KAAP;AAMD,GAVD,CAUE,OAAOE,CAAP,EAAU;AACV,WAAO;AAACD,MAAAA,KAAK,EAAC;AAACD,QAAAA,KAAK,EAAC;AAAP;AAAP,KAAP;AACD;AACF;;AACD,MAAMG,KAAK,GAAG,CAAC;AAACJ,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAmB;AAC7B,MAAIA,KAAJ,EACA,oBAAO,QAAC,gBAAD;AAAkB,IAAA,UAAU,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,sBAAO,QAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAI,CAACK,SAAL,CAAeC;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAJD;;AAMA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport Login from '../../components/account/login';\nimport { gql } from '@apollo/client';\nimport client from \"../../backend-client\";\nimport DefaultErrorPage from 'next/error';\n\nconst query = gql`\nquery{\n    loginPage{\n      hero{\n        title\n        background{\n          url\n        }\n      }\n    }\n  }\n`\nexport async function getServerSideProps() {\n  try{\n    const { data, error } = await client.query({\n      query: query\n    });\n    return {\n      props: {\n        data: data,\n        error:error\n      },\n    };\n  } catch (e) {\n    return {props:{error:true}};\n  }\n}\nconst login = ({data, error}) => {\n    if (error)\n    return <DefaultErrorPage statusCode={404} />\n    return <Login hero={data.loginPage.hero}/>;\n}\n\nexport default login;\n"]},"metadata":{},"sourceType":"module"}