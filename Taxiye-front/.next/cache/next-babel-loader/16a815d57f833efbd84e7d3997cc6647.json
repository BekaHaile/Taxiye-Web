{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kal/Documents/Development/Taxiye-front/components/modal/index.tsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nconst ModalView = styled(\"div\").withConfig({\n  displayName: \"modal__ModalView\",\n  componentId: \"sc-1wgm1th-0\"\n})([\"display:block;position:fixed;z-index:1;width:100%;height:100%;overflow:auto;background-color:rgba(0,0,0,0.6);\"]);\nconst ModalContent = styled(\"div\").withConfig({\n  displayName: \"modal__ModalContent\",\n  componentId: \"sc-1wgm1th-1\"\n})([\"background-color:#fefefe;padding:15px;width:400px;position:absolute;display:block;left:50%;top:50%;-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);border-radius:5px;\"]);\nconst CloseModal = styled(\"span\").withConfig({\n  displayName: \"modal__CloseModal\",\n  componentId: \"sc-1wgm1th-2\"\n})([\"color:#aaaaaa;float:right;font-size:28px;font-weight:bold;&&{:focus{color:#000;text-decoration:none;cursor:pointer;}:hover{color:#000;text-decoration:none;cursor:pointer;}\"]);\n\nconst Modal = ({\n  show,\n  onClose\n}) => {\n  const {\n    0: activeModal,\n    1: setModal\n  } = useState(\"openModal\");\n  if (!show) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ModalView, {\n      children: /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: /*#__PURE__*/_jsxDEV(CloseModal, {\n          onClick: () => onClose(),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\nexport default Modal;","map":{"version":3,"sources":["/home/kal/Documents/Development/Taxiye-front/components/modal/index.tsx"],"names":["React","useState","styled","ModalView","ModalContent","CloseModal","Modal","show","onClose","activeModal","setModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAAC,KAAD,CAAT;AAAA;AAAA;AAAA,qHAAf;AAUA,MAAME,YAAY,GAAGF,MAAM,CAAC,KAAD,CAAT;AAAA;AAAA;AAAA,+LAAlB;AAaA,MAAMG,UAAU,GAAGH,MAAM,CAAC,MAAD,CAAT;AAAA;AAAA;AAAA,mLAAhB;;AAmBA,MAAMI,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AAC/B,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAA0BT,QAAQ,CAAC,WAAD,CAAxC;AACA,MAAG,CAACM,IAAJ,EACA,OAAO,IAAP;AACA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAA,6BACI,QAAC,YAAD;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAKC,OAAO,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AASH,CAbD;;AAeA,eAAeF,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst ModalView = styled(\"div\")`\ndisplay: block;\nposition: fixed; \nz-index: 1;\nwidth: 100%;\nheight: 100%;\noverflow: auto;\nbackground-color: rgba(0,0,0,0.6);\n`;\n\nconst ModalContent = styled(\"div\")`\n    background-color: #fefefe;\n    padding: 15px;\n    width:400px;\n    position:absolute;\n    display: block;\n    left:50%;\n    top:50%;\n    -ms-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    border-radius:5px;\n`;\n\nconst CloseModal = styled(\"span\")`\n    color: #aaaaaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    && {\n        :focus {\n            color: #000;\n            text-decoration: none;\n            cursor: pointer;  \n        }\n        :hover {\n            color: #000;\n            text-decoration: none;\n            cursor: pointer;  \n        }\n`;\n\n\nconst Modal = ({show, onClose}) => {\n    const [activeModal, setModal] = useState(\"openModal\");\n    if(!show)\n    return null;\n    return (\n        <>\n            <ModalView>\n                <ModalContent >\n                    <CloseModal onClick={() =>onClose() }>&times;</CloseModal>\n                </ModalContent>\n            </ModalView>\n        </>\n    );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}