{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kal/Documents/Development/Taxiye-front/pages/articles/index.tsx\";\nimport React, { useState } from 'react';\nimport ArticlesContent from '../../components/articles';\nimport styled from \"styled-components\";\nimport { SecondaryInputs } from \"../../components/form/inputs\";\nimport Banner from \"../../components/hero/\";\nimport { gql } from '@apollo/client';\nimport client from \"../../backend-client\";\nimport DefaultErrorPage from 'next/error';\nimport Articles from \"../../components/articles/normal/\";\nconst SearchContainer = styled(\"div\").withConfig({\n  displayName: \"articles__SearchContainer\",\n  componentId: \"sc-843mxb-0\"\n})([\"width:400px;margin:auto;\"]);\nconst searchQuery = gql`\nquery ArticleQuery($q: String!) {\n  articlePage{\n      hero{\n        title\n        subTitle\n        background{\n          url\n        }\n      }\n    }\n  articles(where:{_or:[{headerTitle_contains:$q },{headerSubTitle_contains:$q },{headerLongSubtitle_contains:$q }]}){\n    id\n    published_at\n    featured\n   \n      headerTitle\n      headerSubTitle\n      thumbnail {\n        url\n        \n      }\n      mainMedia {\n        url\n      }\n    \theaderLongSubtitle\n  }\n}\n\n`;\nconst query = gql`\n# Write your query or mutation here\nquery {\n  \tarticlePage{\n      hero{\n        title\n        subTitle\n        background{\n          url\n        }\n      }\n    }\n    featured: articles(sort: \"created_at\" ,where: {featured:true}){\n    id\n    published_at\n    featured\n    headerTitle\n    headerSubTitle\n    thumbnail {\n        url\n        \n    }\n    mainMedia {\n        url\n    }\n    headerLongSubtitle\n    \n  }\n  unfeatured: articles(sort: \"created_at\" ,where: {featured:false}, limit:9){\n    id\n    published_at\n    featured\n    headerTitle\n    headerSubTitle\n    thumbnail {\n        url\n        \n    }\n    mainMedia {\n        url\n    }\n    headerLongSubtitle\n    \n  }\n}\n`;\n\nasync function search() {\n  try {\n    const {\n      data,\n      error\n    } = await client.query({\n      query: searchQuery\n    });\n    return {\n      props: {\n        data: data\n      }\n    };\n  } catch (e) {\n    return {\n      props: {\n        error: true\n      }\n    };\n  }\n}\n\nexport async function getServerSideProps() {\n  try {\n    const {\n      data,\n      error\n    } = await client.query({\n      query: query\n    });\n    return {\n      props: {\n        data: data\n      }\n    };\n  } catch (e) {\n    return {\n      props: {\n        error: true\n      }\n    };\n  }\n}\n\nfunction searchedArticles() {\n  const data = search();\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Articles, {\n      unfeatured: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nexport default function articles({\n  data,\n  error\n}) {\n  const {\n    0: isSearching,\n    1: setSearching\n  } = useState(false);\n\n  const children = /*#__PURE__*/_jsxDEV(SearchContainer, {\n    children: /*#__PURE__*/_jsxDEV(SecondaryInputs, {\n      id: \"location\",\n      placeholder: \"Search...\",\n      icon: require(\"../../assets/icons/search.svg\"),\n      onInput: event => {\n        if (event.target.value == null || event.target.value == \"\") {\n          setSearching(false);\n        } else if (event.key == \"Enter\") {\n          setSearching(true);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 20\n  }, this);\n\n  if (isSearching) return searchedArticles();\n  if (error) return /*#__PURE__*/_jsxDEV(DefaultErrorPage, {\n    statusCode: 404\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      hero: data.articlePage.hero,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), isSearching ? /*#__PURE__*/_jsxDEV(Articles, {\n      unfeatured: data.unfeatured\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(ArticlesContent, {\n      featured: data.featured,\n      unfeatured: data.unfeatured\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/kal/Documents/Development/Taxiye-front/pages/articles/index.tsx"],"names":["React","useState","ArticlesContent","styled","SecondaryInputs","Banner","gql","client","DefaultErrorPage","Articles","SearchContainer","searchQuery","query","search","data","error","props","e","getServerSideProps","searchedArticles","console","log","articles","isSearching","setSearching","children","require","event","target","value","key","articlePage","hero","unfeatured","featured"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,GAAT,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,gBAAP,MAA6B,YAA7B;AACA,OAAOC,QAAP,MAAqB,mCAArB;AAIA,MAAMC,eAAe,GAAGP,MAAM,CAAC,KAAD,CAAT;AAAA;AAAA;AAAA,gCAArB;AAKA,MAAMQ,WAAW,GAAGL,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;AA+BA,MAAMM,KAAK,GAAGN,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7CA;;AA+CC,eAAeO,MAAf,GAAwB;AACvB,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkB,MAAMR,MAAM,CAACK,KAAP,CAAa;AACzCA,MAAAA,KAAK,EAAED;AADkC,KAAb,CAA9B;AAGA,WAAO;AACLK,MAAAA,KAAK,EAAE;AACLF,QAAAA,IAAI,EAAEA;AADD;AADF,KAAP;AAKD,GATD,CASE,OAAOG,CAAP,EAAU;AACV,WAAO;AAAED,MAAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT;AAAT,KAAP;AACD;AACF;;AACD,OAAO,eAAeG,kBAAf,GAAoC;AACzC,MAAI;AACF,UAAM;AAAEJ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkB,MAAMR,MAAM,CAACK,KAAP,CAAa;AACzCA,MAAAA,KAAK,EAAEA;AADkC,KAAb,CAA9B;AAGA,WAAO;AACLI,MAAAA,KAAK,EAAE;AACLF,QAAAA,IAAI,EAAEA;AADD;AADF,KAAP;AAKD,GATD,CASE,OAAOG,CAAP,EAAU;AACV,WAAO;AAAED,MAAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT;AAAT,KAAP;AACD;AACF;;AAED,SAASI,gBAAT,GAA4B;AAC1B,QAAML,IAAI,GAAGD,MAAM,EAAnB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAMD;;AAED,eAAe,SAASQ,QAAT,CAAkB;AAAER,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAlB,EAAmC;AAChD,QAAM;AAAA,OAACQ,WAAD;AAAA,OAAcC;AAAd,MAA8BvB,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMwB,QAAQ,gBAAG,QAAC,eAAD;AAAA,2BACf,QAAC,eAAD;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,WAAW,EAAC,WAFd;AAGE,MAAA,IAAI,EAAEC,OAAO,CAAC,+BAAD,CAHf;AAIE,MAAA,OAAO,EAAGC,KAAD,IAAW;AAClB,YAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB,IAAtB,IAA8BF,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB,EAAxD,EAA4D;AAC1DL,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,SAFD,MAGK,IAAIG,KAAK,CAACG,GAAN,IAAa,OAAjB,EAA0B;AAC7BN,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AAGF;AAbH;AAAA;AAAA;AAAA;AAAA;AADe;AAAA;AAAA;AAAA;AAAA,UAAjB;;AAiBA,MAAID,WAAJ,EACE,OAAOJ,gBAAgB,EAAvB;AACF,MAAIJ,KAAJ,EACE,oBAAO,QAAC,gBAAD;AAAkB,IAAA,UAAU,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACF,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,IAAI,CAACiB,WAAL,CAAiBC,IAA/B;AAAqC,MAAA,QAAQ,EAAEP;AAA/C;AAAA;AAAA;AAAA;AAAA,YADF,EAGIF,WAAW,gBACT,QAAC,QAAD;AAAU,MAAA,UAAU,EAAET,IAAI,CAACmB;AAA3B;AAAA;AAAA;AAAA;AAAA,YADS,gBAET,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEnB,IAAI,CAACoB,QAAhC;AAA0C,MAAA,UAAU,EAAEpB,IAAI,CAACmB;AAA3D;AAAA;AAAA;AAAA;AAAA,YALN;AAAA,kBADF;AAWD","sourcesContent":["import React, { useState } from 'react';\nimport ArticlesContent from '../../components/articles';\nimport styled from \"styled-components\";\nimport { SecondaryInputs } from \"../../components/form/inputs\";\nimport Banner from \"../../components/hero/\";\nimport { gql, useQuery } from '@apollo/client';\nimport client from \"../../backend-client\";\nimport DefaultErrorPage from 'next/error';\nimport Articles from \"../../components/articles/normal/\";\nimport Loading from \"../../components/loading/\";\n\n\nconst SearchContainer = styled(\"div\")`\n    width:400px;\n    margin:auto;\n`;\n\nconst searchQuery = gql`\nquery ArticleQuery($q: String!) {\n  articlePage{\n      hero{\n        title\n        subTitle\n        background{\n          url\n        }\n      }\n    }\n  articles(where:{_or:[{headerTitle_contains:$q },{headerSubTitle_contains:$q },{headerLongSubtitle_contains:$q }]}){\n    id\n    published_at\n    featured\n   \n      headerTitle\n      headerSubTitle\n      thumbnail {\n        url\n        \n      }\n      mainMedia {\n        url\n      }\n    \theaderLongSubtitle\n  }\n}\n\n`\n\nconst query = gql`\n# Write your query or mutation here\nquery {\n  \tarticlePage{\n      hero{\n        title\n        subTitle\n        background{\n          url\n        }\n      }\n    }\n    featured: articles(sort: \"created_at\" ,where: {featured:true}){\n    id\n    published_at\n    featured\n    headerTitle\n    headerSubTitle\n    thumbnail {\n        url\n        \n    }\n    mainMedia {\n        url\n    }\n    headerLongSubtitle\n    \n  }\n  unfeatured: articles(sort: \"created_at\" ,where: {featured:false}, limit:9){\n    id\n    published_at\n    featured\n    headerTitle\n    headerSubTitle\n    thumbnail {\n        url\n        \n    }\n    mainMedia {\n        url\n    }\n    headerLongSubtitle\n    \n  }\n}\n`\n\n async function search() {\n  try {\n    const { data, error } = await client.query({\n      query: searchQuery\n    });\n    return {\n      props: {\n        data: data\n      },\n    };\n  } catch (e) {\n    return { props: { error: true } };\n  }\n}\nexport async function getServerSideProps() {\n  try {\n    const { data, error } = await client.query({\n      query: query\n    });\n    return {\n      props: {\n        data: data\n      },\n    };\n  } catch (e) {\n    return { props: { error: true } };\n  }\n}\n\nfunction searchedArticles() {\n  const data = search();\n  console.log(data);\n\n  return (\n    <>\n      <Articles unfeatured={data} />\n\n    </>\n  )\n}\n\nexport default function articles({ data, error }) {\n  const [isSearching, setSearching] = useState(false);\n\n  const children = <SearchContainer>\n    <SecondaryInputs\n      id=\"location\"\n      placeholder=\"Search...\"\n      icon={require(\"../../assets/icons/search.svg\")}\n      onInput={(event) => {\n        if (event.target.value == null || event.target.value == \"\") {\n          setSearching(false);\n        }\n        else if (event.key == \"Enter\") {\n          setSearching(true);\n        }\n\n\n      }}\n    />\n  </SearchContainer>\n  if (isSearching)\n    return searchedArticles();\n  if (error)\n    return <DefaultErrorPage statusCode={404} />\n  return (\n    <>\n      <Banner hero={data.articlePage.hero} children={children} />\n      {\n        isSearching ?\n          <Articles unfeatured={data.unfeatured} /> :\n          <ArticlesContent featured={data.featured} unfeatured={data.unfeatured} />\n      }\n    </>\n  )\n\n}\n"]},"metadata":{},"sourceType":"module"}