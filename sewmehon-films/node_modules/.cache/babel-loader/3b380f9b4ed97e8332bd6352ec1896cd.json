{"ast":null,"code":"var _jsxFileName = \"/home/kal/Documents/Development/sewmehon-films/src/Components/Map/index.js\";\nimport React from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport { GoogleMapProps } from 'react-google-maps/lib/components/GoogleMap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map({\n  a\n}) {\n  return /*#__PURE__*/_jsxDEV(GoogleMap, { ...a,\n    defaultZoom: 10,\n    defaultCenter: {\n      lat: 9,\n      lng: 39\n    },\n    children: places.map(place => {\n      return /*#__PURE__*/_jsxDEV(MarkerWithLabel, {\n        labelStyle: {\n          textAlign: \"center\",\n          width: labelSize.width + 'px',\n          backgroundColor: \"#7fffd4\",\n          fontSize: \"14px\",\n          padding: labelPadding + \"px\"\n        },\n        labelAnchor: {\n          x: labelSize.width / 2 + labelPadding,\n          y: 80\n        },\n        position: {\n          lat: place.lat,\n          lng: place.lng\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: place.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)\n      }, place.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Map;\nconst WrappedMap = withScriptjs(_c2 = withGoogleMap(Map));\n_c3 = WrappedMap;\nexport default WrappedMap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"WrappedMap$withScriptjs\");\n$RefreshReg$(_c3, \"WrappedMap\");","map":{"version":3,"sources":["/home/kal/Documents/Development/sewmehon-films/src/Components/Map/index.js"],"names":["React","withScriptjs","withGoogleMap","GoogleMap","Marker","GoogleMapProps","Map","a","lat","lng","places","map","place","textAlign","width","labelSize","backgroundColor","fontSize","padding","labelPadding","x","y","name","id","WrappedMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,mBAA/D;AACA,SAASC,cAAT,QAA+B,4CAA/B;;;AAGA,SAASC,GAAT,CAAa;AAAEC,EAAAA;AAAF,CAAb,EAAoB;AAChB,sBACI,QAAC,SAAD,OACQA,CADR;AAEI,IAAA,WAAW,EAAE,EAFjB;AAGI,IAAA,aAAa,EAAE;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAE;AAAf,KAHnB;AAAA,cAMKC,MAAM,CAACC,GAAP,CAAWC,KAAK,IAAI;AACjB,0BACI,QAAC,eAAD;AACI,QAAA,UAAU,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,KAAK,EAAEC,SAAS,CAACD,KAAV,GAAkB,IAAhD;AAAsDE,UAAAA,eAAe,EAAE,SAAvE;AAAkFC,UAAAA,QAAQ,EAAE,MAA5F;AAAoGC,UAAAA,OAAO,EAAEC,YAAY,GAAG;AAA5H,SADhB;AAEI,QAAA,WAAW,EAAE;AAAEC,UAAAA,CAAC,EAAGL,SAAS,CAACD,KAAV,GAAkB,CAAnB,GAAwBK,YAA7B;AAA2CE,UAAAA,CAAC,EAAE;AAA9C,SAFjB;AAII,QAAA,QAAQ,EAAE;AAAEb,UAAAA,GAAG,EAAEI,KAAK,CAACJ,GAAb;AAAkBC,UAAAA,GAAG,EAAEG,KAAK,CAACH;AAA7B,SAJd;AAAA,+BAKI;AAAA,oBAAOG,KAAK,CAACU;AAAb;AAAA;AAAA;AAAA;AAAA;AALJ,SAGSV,KAAK,CAACW,EAHf;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVA;AANL;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;KArBQjB,G;AAuBT,MAAMkB,UAAU,GAAGvB,YAAY,OAACC,aAAa,CAACI,GAAD,CAAd,CAA/B;MAAMkB,U;AAEN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport { GoogleMapProps } from 'react-google-maps/lib/components/GoogleMap';\n\n\nfunction Map({ a }) {\n    return (\n        <GoogleMap\n            {...a}\n            defaultZoom={10}\n            defaultCenter={{ lat: 9, lng: 39 }}\n\n        >\n            {places.map(place => {\n                return (\n                    <MarkerWithLabel\n                        labelStyle={{ textAlign: \"center\", width: labelSize.width + 'px', backgroundColor: \"#7fffd4\", fontSize: \"14px\", padding: labelPadding + \"px\" }}\n                        labelAnchor={{ x: (labelSize.width / 2) + labelPadding, y: 80 }}\n                        key={place.id}\n                        position={{ lat: place.lat, lng: place.lng }}>\n                        <span>{place.name}</span>\n                    </MarkerWithLabel>\n                );\n            })}\n        </GoogleMap>\n    );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\n\nexport default WrappedMap;"]},"metadata":{},"sourceType":"module"}