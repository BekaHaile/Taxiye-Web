{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/kal/Documents/Development/Taxiye-front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kal/Documents/Development/Taxiye-front/pages/articles/[id].tsx\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n# Write your query or mutation here\\nquery {\\n    articleQuery( id: int ){\\n  \\tarticlePage{\\n      hero{\\n        title\\n        subTitle\\n        background{\\n          url\\n        }\\n      }\\n    }\\n    articles(sort: \\\"created_at\\\", where: {id:\\\"1\\\"} ){\\n    id\\n    published_at\\n    featured\\n    header{\\n    \\ttitle\\n    \\tsubTitle\\n    \\tthumbnail{\\n      \\turl\\n    \\t}\\n      \\n    }\\n      body {\\n      ... on ComponentTextMedia{\\n        caption\\n        media {\\n          url\\n        }\\n        meta\\n        __typename\\n      }\\n      ... on ComponentTextParagraph{\\n        content\\n        __typename\\n      }\\n    }\\n  }\\n    }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Article from \"../../components/articles/single\";\nimport Banner from \"../../components/hero/\";\nimport { gql, useQuery } from '@apollo/client';\nvar articleQuery = gql(_templateObject());\nexport default function articles() {\n  _s();\n\n  var _useQuery = useQuery(articleQuery, {\n    variables: {\n      id: \"1\"\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 16\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      hero: data.articlePage.hero,\n      children: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Article, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(articles, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["/home/kal/Documents/Development/Taxiye-front/pages/articles/[id].tsx"],"names":["React","Article","Banner","gql","useQuery","articleQuery","articles","variables","id","data","loading","console","log","articlePage","hero"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAGA,IAAMC,YAAY,GAAGF,GAAH,mBAAlB;AA6CA,eAAe,SAASG,QAAT,GAAoB;AAAA;;AAAA,kBACLF,QAAQ,CAACC,YAAD,EAAe;AAC7CE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAC;AAAL;AADkC,GAAf,CADH;AAAA,MACvBC,IADuB,aACvBA,IADuB;AAAA,MACjBC,OADiB,aACjBA,OADiB;;AAK/B,MAAIA,OAAJ,EACI,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACJ,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEA,IAAI,CAACI,WAAL,CAAiBC,IAA/B;AAAqC,MAAA,QAAQ,EAAE;AAA/C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAOH;;GAfuBR,Q;UACMF,Q","sourcesContent":["import React from 'react';\nimport Article from \"../../components/articles/single\";\nimport Banner from \"../../components/hero/\";\nimport { gql, useQuery } from '@apollo/client'\n\n\nconst articleQuery = gql`\n# Write your query or mutation here\nquery {\n    articleQuery( id: int ){\n  \tarticlePage{\n      hero{\n        title\n        subTitle\n        background{\n          url\n        }\n      }\n    }\n    articles(sort: \"created_at\", where: {id:\"1\"} ){\n    id\n    published_at\n    featured\n    header{\n    \ttitle\n    \tsubTitle\n    \tthumbnail{\n      \turl\n    \t}\n      \n    }\n      body {\n      ... on ComponentTextMedia{\n        caption\n        media {\n          url\n        }\n        meta\n        __typename\n      }\n      ... on ComponentTextParagraph{\n        content\n        __typename\n      }\n    }\n  }\n    }\n}\n`\n\n\nexport default function articles() {\n    const { data, loading } = useQuery(articleQuery, {\n        variables: { id:\"1\" },\n      })\n\n    if (loading)\n        return <Loading/>\n        console.log(data);\n    return (\n        <>\n            <Banner hero={data.articlePage.hero} children={null} />\n            <Article />\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}