{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kal/Documents/Development/Taxiye-front/pages/index.tsx\";\nimport React from 'react';\nimport LandingContent from '../components/landing';\nimport Banner from \"../components/hero/landing-hero\";\nimport Loading from \"../components/loading/\";\nimport { gql, useQuery } from '@apollo/client';\nimport client from \"../backend-client\";\nconst homePageQuery = gql`\n# Write your query or mutation here\nquery {\n  homePage {\n    hero{\n      title\n      subTitle\n      background{\n        url\n      }\n    }\n    serviceSectionTitle\n    serviceSectionSubTitle\n    testimonySectionTitle\n    testimonySectionSubTitle\n    fleetSectionTitle\n    fleetSectionSubTitle\n    articleSectionTitle\n    articleSectionSubTitle\n    \n  }\n  services(sort: \"created_at\" ){\n    id\n    name\n    shortDescription{\n      content\n    }\n    longDescription{\n      content\n    }\n    thumbnail{\n      url\n    }\n    \n  }\n  \n    articles(sort: \"created_at\" ){\n    id\n    published_at\n    featured\n    header{\n    \ttitle\n    \tsubTitle\n    \tthumbnail{\n      \turl\n    \t}\n      \n    }\n  }\n  testimonies(sort: \"created_at\" ){\n  \tid\n    profileImage{\n      url\n    }\n  \tfullName\n    position\n    testimony\n    rating\n  }\n    fleets(sort: \"created_at\" ){\n  \tid\n    name\n    description\n    speed\n  \timage{\n      url\n    }\n  }\n}\n`;\nexport async function getServerSideProps() {\n  const {\n    data\n  } = await client.query({\n    query: gql`\n  query homePage {\n    hero{\n      title\n      subTitle\n      background{\n        url\n      }\n    }\n      }\n    `\n  });\n  return {\n    props: {\n      data: data.homePage\n    }\n  };\n}\nexport default function index() {\n  const {\n    data,\n    loading\n  } = useQuery(homePageQuery);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      hero: data.homePage.hero\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LandingContent, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/kal/Documents/Development/Taxiye-front/pages/index.tsx"],"names":["React","LandingContent","Banner","Loading","gql","useQuery","client","homePageQuery","getServerSideProps","data","query","props","homePage","index","loading","hero"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAGH,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArEA;AAuEA,OAAO,eAAeI,kBAAf,GAAoC;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMH,MAAM,CAACI,KAAP,CAAa;AAClCA,IAAAA,KAAK,EAAEN,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXsC,GAAb,CAAvB;AAaA,SAAO;AACLO,IAAAA,KAAK,EAAE;AACLF,MAAAA,IAAI,EAAEA,IAAI,CAACG;AADN;AADF,GAAP;AAKD;AAGD,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEJ,IAAAA,IAAF;AAAQK,IAAAA;AAAR,MAAoBT,QAAQ,CAACE,aAAD,CAAlC;AAEA,MAAIO,OAAJ,EACE,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,sBACA;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEL,IAAI,CAACG,QAAL,CAAcG;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEN;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADA;AAMH","sourcesContent":["import React from 'react';\nimport LandingContent from '../components/landing';\nimport Banner from \"../components/hero/landing-hero\";\nimport Loading from \"../components/loading/\";\n\nimport { gql, useQuery } from '@apollo/client';\nimport client from \"../backend-client\";\n\nconst homePageQuery = gql`\n# Write your query or mutation here\nquery {\n  homePage {\n    hero{\n      title\n      subTitle\n      background{\n        url\n      }\n    }\n    serviceSectionTitle\n    serviceSectionSubTitle\n    testimonySectionTitle\n    testimonySectionSubTitle\n    fleetSectionTitle\n    fleetSectionSubTitle\n    articleSectionTitle\n    articleSectionSubTitle\n    \n  }\n  services(sort: \"created_at\" ){\n    id\n    name\n    shortDescription{\n      content\n    }\n    longDescription{\n      content\n    }\n    thumbnail{\n      url\n    }\n    \n  }\n  \n    articles(sort: \"created_at\" ){\n    id\n    published_at\n    featured\n    header{\n    \ttitle\n    \tsubTitle\n    \tthumbnail{\n      \turl\n    \t}\n      \n    }\n  }\n  testimonies(sort: \"created_at\" ){\n  \tid\n    profileImage{\n      url\n    }\n  \tfullName\n    position\n    testimony\n    rating\n  }\n    fleets(sort: \"created_at\" ){\n  \tid\n    name\n    description\n    speed\n  \timage{\n      url\n    }\n  }\n}\n`\n\nexport async function getServerSideProps() {\n  const { data } = await client.query({\n    query: gql`\n  query homePage {\n    hero{\n      title\n      subTitle\n      background{\n        url\n      }\n    }\n      }\n    `,\n  });\n  return {\n    props: {\n      data: data.homePage,\n    },\n };\n}\n\n\nexport default function index() {\n  const { data, loading } = useQuery(homePageQuery);\n\n  if (loading)\n    return <Loading/>\n    return(\n    <>\n      <Banner hero={data.homePage.hero} />\n      <LandingContent data={data} />;\n    </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}