{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kal/Documents/Development/Taxiye-front/pages/articles/search.tsx\";\nimport React, { useState } from 'react';\nimport styled from \"styled-components\";\nimport { SecondaryInputs } from \"../../components/form/inputs\";\nimport { useQuery } from \"react-query\";\nimport { Button } from \"../../components/form/buttons/primary-button\";\nconst CustomButton = styled(Button).withConfig({\n  displayName: \"search__CustomButton\",\n  componentId: \"sc-108w1yx-0\"\n})([\"padding:5px 20px;\"]);\nconst GraySection = styled(\"div\").withConfig({\n  displayName: \"search__GraySection\",\n  componentId: \"sc-108w1yx-1\"\n})([\"background:#f9f9f9;margin-top:-60px;padding-bottom:60px;\"]);\nconst Container = styled(\"div\").withConfig({\n  displayName: \"search__Container\",\n  componentId: \"sc-108w1yx-2\"\n})([\"\"]);\nconst SearchContainer = styled(\"div\").withConfig({\n  displayName: \"search__SearchContainer\",\n  componentId: \"sc-108w1yx-3\"\n})([\"width:400px;margin:auto;\"]);\nconst NoContent = styled(\"div\").withConfig({\n  displayName: \"search__NoContent\",\n  componentId: \"sc-108w1yx-4\"\n})([\"font-family:Open Sans;font-style:normal;font-weight:600;font-size:20px;line-height:27px;color:#000000;text-align:center;\"]);\nexport async function getServerSideProps() {\n  const {\n    NEXT_PUBLIC_HOST\n  } = process.env;\n  const resArticlePage = await fetch(`${NEXT_PUBLIC_HOST}/article-page`);\n  const articlePageData = await resArticlePage.json();\n  const featuredRes = await fetch(`${NEXT_PUBLIC_HOST}/articles/?featured=true`);\n  const featuredArticlesData = await featuredRes.json();\n  const unfeaturedRes = await fetch(`${NEXT_PUBLIC_HOST}/articles/?featured=false`);\n  const unfeaturedArticlesData = await unfeaturedRes.json();\n  return {\n    props: {\n      articlePage: articlePageData,\n      featured: featuredArticlesData,\n      unfeatured: unfeaturedArticlesData,\n      articles: []\n    }\n  };\n}\n\nconst getSuggestion = async key => {\n  const {\n    NEXT_PUBLIC_HOST\n  } = process.env;\n  const q = key.queryKey[1].content;\n\n  if (q) {\n    const res = await fetch(`${NEXT_PUBLIC_HOST}/articles?headerTitle_contains=${q}`);\n    return res.json();\n  }\n\n  return [];\n};\n\nconst getSearch = async key => {\n  const {\n    NEXT_PUBLIC_HOST\n  } = process.env;\n  const q = key.queryKey[1].content;\n\n  if (q) {\n    const res = await fetch(`${NEXT_PUBLIC_HOST}/articles?headerTitle_contains=${q}`);\n    return res.json();\n  }\n\n  const res = await fetch(`${NEXT_PUBLIC_HOST}/articles`);\n  return res.json();\n};\n\nexport default function searching({\n  articlePage,\n  featured,\n  unfeatured,\n  articles\n}) {\n  const {\n    0: searchText,\n    1: setSearching\n  } = useState(\"\");\n  const {\n    data: searchData,\n    status: searchStatus\n  } = useQuery(['articles', {\n    content: searchText\n  }], getSuggestion, {\n    initialData: articles\n  });\n\n  const children = /*#__PURE__*/_jsxDEV(SearchContainer, {\n    children: /*#__PURE__*/_jsxDEV(SecondaryInputs, {\n      id: \"location\",\n      placeholder: \"Search...\",\n      icon: require(\"../../assets/icons/search.svg\"),\n      lists: searchData,\n      value: searchText,\n      onChange: event => {\n        setSearching(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 20\n  }, this);\n}","map":{"version":3,"sources":["/home/kal/Documents/Development/Taxiye-front/pages/articles/search.tsx"],"names":["React","useState","styled","SecondaryInputs","useQuery","Button","CustomButton","GraySection","Container","SearchContainer","NoContent","getServerSideProps","NEXT_PUBLIC_HOST","process","env","resArticlePage","fetch","articlePageData","json","featuredRes","featuredArticlesData","unfeaturedRes","unfeaturedArticlesData","props","articlePage","featured","unfeatured","articles","getSuggestion","key","q","queryKey","content","res","getSearch","searching","searchText","setSearching","data","searchData","status","searchStatus","initialData","children","require","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ArticlesContent from '../../components/articles';\nimport styled from \"styled-components\";\nimport { SecondaryInputs } from \"../../components/form/inputs\";\nimport Banner from \"../../components/hero/\";\nimport DefaultErrorPage from 'next/error';\nimport Articles from \"../../components/articles/normal/\";\nimport Loading from \"../../components/loading/\";\nimport { useQuery } from \"react-query\";\nimport { Button } from \"../../components/form/buttons/primary-button\";\n\nconst CustomButton = styled(Button)`\n  padding: 5px 20px;\n`;\nconst GraySection = styled(\"div\")`\nbackground: #f9f9f9;\nmargin-top: -60px;\npadding-bottom:60px;\n`;\n\n\nconst Container = styled(\"div\")`\n\n`;\nconst SearchContainer = styled(\"div\")`\n    width:400px;\n    margin:auto;\n`;\nconst NoContent = styled(\"div\")`\nfont-family: Open Sans;\nfont-style: normal;\nfont-weight: 600;\nfont-size: 20px;\nline-height: 27px;\ncolor: #000000;\ntext-align:center;\n`;\n\nexport async function getServerSideProps() {\n  const { NEXT_PUBLIC_HOST } = process.env;\n  const resArticlePage = await fetch(`${NEXT_PUBLIC_HOST}/article-page`);\n  const articlePageData = await resArticlePage.json();\n  const featuredRes = await fetch(`${NEXT_PUBLIC_HOST}/articles/?featured=true`);\n  const featuredArticlesData = await featuredRes.json();\n  const unfeaturedRes = await fetch(`${NEXT_PUBLIC_HOST}/articles/?featured=false`);\n  const unfeaturedArticlesData = await unfeaturedRes.json();\n  return {\n    props: {\n      articlePage: articlePageData,\n      featured: featuredArticlesData,\n      unfeatured: unfeaturedArticlesData,\n      articles:[]\n    },\n  };\n}\nconst getSuggestion = async (key) => {\n  const { NEXT_PUBLIC_HOST } = process.env;\n  const q = key.queryKey[1].content;\n  if (q) {\n    const res = await fetch(`${NEXT_PUBLIC_HOST}/articles?headerTitle_contains=${q}`);\n    return res.json();\n  }\n  \n  return [];\n}\nconst getSearch = async (key) => {\n  const { NEXT_PUBLIC_HOST } = process.env;\n  const q = key.queryKey[1].content;\n  if (q) {\n    const res = await fetch(`${NEXT_PUBLIC_HOST}/articles?headerTitle_contains=${q}`);\n    return res.json();\n  }\n  const res = await fetch(`${NEXT_PUBLIC_HOST}/articles`);\n  return res.json();\n}\n\nexport default function searching({ articlePage, featured, unfeatured, articles }) {\n  const [searchText, setSearching] = useState(\"\");\n  const { data: searchData, status:searchStatus } = useQuery(['articles', { content: searchText }], getSuggestion, { initialData: articles });\n  \n\n  const children = <SearchContainer>\n    <SecondaryInputs\n      id=\"location\"\n      placeholder=\"Search...\"\n      icon={require(\"../../assets/icons/search.svg\")}\n      lists={searchData}\n      value={searchText}\n      onChange={(event) => {\n          setSearching(event.target.value);\n      }}\n    />\n  </SearchContainer>\n  \n\n}\n"]},"metadata":{},"sourceType":"module"}