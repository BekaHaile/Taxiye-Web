{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kal/Documents/Development/Taxiye-front/pages/signup/corporate/index.tsx\";\nimport React from 'react';\nimport SignupContent from '../../../components/account/signup/corporate';\nimport { gql, useQuery } from '@apollo/client';\nconst query = gql`\nquery{\n    corporateSignUpPage{\n      hero{\n        title\n        background{\n          url\n        }\n      }\n    }\n  }\n`;\n\nconst signup = () => {\n  const {\n    data,\n    loading\n  } = useQuery(query);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(SignupContent, {\n    hero: data.corporateSignUpPage.hero\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\nexport default signup;","map":{"version":3,"sources":["/home/kal/Documents/Development/Taxiye-front/pages/signup/corporate/index.tsx"],"names":["React","SignupContent","gql","useQuery","query","signup","data","loading","corporateSignUpPage","hero"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,MAAMC,KAAK,GAAGF,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,MAAMG,MAAM,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBJ,QAAQ,CAACC,KAAD,CAAlC;AACA,MAAIG,OAAJ,EACI,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACJ,sBAAO,QAAC,aAAD;AAAe,IAAA,IAAI,EAAED,IAAI,CAACE,mBAAL,CAAyBC;AAA9C;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CALD;;AAOA,eAAeJ,MAAf","sourcesContent":["import React from 'react';\nimport SignupContent from '../../../components/account/signup/corporate';\nimport { gql, useQuery } from '@apollo/client'\n\nconst query = gql`\nquery{\n    corporateSignUpPage{\n      hero{\n        title\n        background{\n          url\n        }\n      }\n    }\n  }\n`\n\nconst signup = () => {\n    const { data, loading } = useQuery(query)\n    if (loading)\n        return <Loading/>\n    return <SignupContent hero={data.corporateSignUpPage.hero}/>;\n}\n\nexport default signup;"]},"metadata":{},"sourceType":"module"}