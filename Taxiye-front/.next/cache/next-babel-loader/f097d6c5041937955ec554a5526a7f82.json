{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kal/Documents/Development/Taxiye-front/components/account/signup/stepper/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport styled from \"styled-components\";\nimport Information from \"../driver/information\";\nimport PhoneVerification from \"../driver/phone-verification\";\nimport LastPage from \"../driver/finish\";\nconst StepperContainer = styled(\"div\")`\nwidth:760px;\nmargin:auto;\n`;\nconst steps = [\"Driver Information\", \"Phone Verification\", \"Vehicle Type\", \"Documents\"];\nexport default function HorizontalLinearStepper() {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [show, setShow] = React.useState(false);\n  const [sendSms, setSendTextShow] = React.useState(false);\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StepperContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      alternativeLabel: true,\n      children: steps.map((label, index) => {\n        const stepProps = {};\n        const labelProps = {};\n        return /*#__PURE__*/_jsxDEV(Step, _objectSpread(_objectSpread({}, stepProps), {}, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, _objectSpread(_objectSpread({}, labelProps), {}, {\n            children: label\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }), label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }, this), activeStep === steps.length ? /*#__PURE__*/_jsxDEV(LastPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 39\n    }, this) : activeStep == 0 ? /*#__PURE__*/_jsxDEV(Information, {\n      activeStep: activeStep,\n      steps: steps,\n      handleNext: handleNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(PhoneVerification, {\n      setShow: setShow,\n      handleNext: handleNext,\n      handleBack: handleBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/kal/Documents/Development/Taxiye-front/components/account/signup/stepper/index.tsx"],"names":["React","Stepper","Step","StepLabel","styled","Information","PhoneVerification","LastPage","StepperContainer","steps","HorizontalLinearStepper","activeStep","setActiveStep","useState","skipped","setSkipped","Set","show","setShow","sendSms","setSendTextShow","isStepOptional","step","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","map","label","index","stepProps","labelProps","length"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport styled from \"styled-components\";\nimport Information from \"../driver/information\";\nimport PhoneVerification from \"../driver/phone-verification\";\nimport LastPage from \"../driver/finish\";\n\n\nconst StepperContainer = styled(\"div\")`\nwidth:760px;\nmargin:auto;\n`;\nconst steps = [\n  \"Driver Information\",\n  \"Phone Verification\",\n  \"Vehicle Type\",\n  \"Documents\"\n];\n\nexport default function HorizontalLinearStepper() {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [show, setShow] = React.useState(false);\n  const [sendSms, setSendTextShow] = React.useState(false);\n\n  const isStepOptional = (step) => {\n    return step === 1;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n\n  return (\n    <StepperContainer>\n     <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      {\n        activeStep === steps.length ? <LastPage /> :\n          activeStep == 0 ?\n            <Information activeStep={activeStep} steps={steps} handleNext={handleNext} /> :\n\n            <PhoneVerification  setShow={setShow} handleNext={handleNext} handleBack={handleBack} />\n\n      }\n\n      \n    </StepperContainer>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}