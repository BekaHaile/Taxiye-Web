{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kal/Documents/Development/Taxiye-front/pages/articles/[id].tsx\";\nimport React from 'react';\nimport Article from \"../../components/articles/single\";\nimport Banner from \"../../components/hero/\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useRouter } from \"next/router\";\nconst articleQuery = gql`\nquery ArticleQuery( $id: ID! ){\n    articlePage{\n         hero{\n             title\n             subTitle\n             background{\n                 url\n             }\n\n         }\n     }\n     featured: articles(sort: \"created_at\" ,where: {featured:true}){\n    id\n    published_at\n    featured\n    header{\n    \ttitle\n    \tsubTitle\n        longSubTitle\n    \tthumbnail{\n      \turl\n    \t}\n        mainMedia{\n            url\n        }\n      \n    }\n    \n  }\n      article(id:$id ){\n      id\n      published_at\n      featured\n      header{\n          title\n          subTitle\n          longSubTitle\n          thumbnail{\n            url\n          }\n        mainMedia{\n          url\n        }\n        \n      }\n        body {\n        ... on ComponentTextMedia{\n          caption\n          media {\n            url\n          }\n          meta\n          __typename\n        }\n        ... on ComponentTextQuote{\n        content\n        __typename\n       }\n        ... on ComponentTextParagraph{\n          content\n          __typename\n        }\n      }\n    }\n      \n  }\n`;\nexport default function articles() {\n  const router = useRouter();\n  const article_id = router.query.id;\n  if (article_id == null) return null;\n  const {\n    data,\n    loading\n  } = useQuery(articleQuery, {\n    variables: {\n      id: article_id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 16\n  }, this);\n  let hero = data.articlePage.hero;\n  hero.title = `${hero.title}`;\n  hero.subTitle = \"\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      hero: data.articlePage.hero,\n      children: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Article, {\n      article: data.article,\n      featured: data.featured\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/kal/Documents/Development/Taxiye-front/pages/articles/[id].tsx"],"names":["React","Article","Banner","gql","useQuery","useRouter","articleQuery","articles","router","article_id","query","id","data","loading","variables","hero","articlePage","title","subTitle","article","featured"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,MAAMC,YAAY,GAAGH,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnEA;AAsEA,eAAe,SAASI,QAAT,GAAoB;AAC/B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAaC,EAAhC;AAEA,MAAGF,UAAU,IAAE,IAAf,EACA,OAAO,IAAP;AAGA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBT,QAAQ,CAACE,YAAD,EAAe;AAC7CQ,IAAAA,SAAS,EAAE;AAAEH,MAAAA,EAAE,EAAEF;AAAN;AADkC,GAAf,CAAlC;AAIA,MAAII,OAAJ,EACI,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,MAAIE,IAAI,GAAEH,IAAI,CAACI,WAAL,CAAiBD,IAA3B;AACCA,EAAAA,IAAI,CAACE,KAAL,GAAa,GAAEF,IAAI,CAACE,KAAM,EAA1B;AACAF,EAAAA,IAAI,CAACG,QAAL,GAAe,EAAf;AAEL,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEN,IAAI,CAACI,WAAL,CAAiBD,IAA/B;AAAqC,MAAA,QAAQ,EAAE;AAA/C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEH,IAAI,CAACO,OAAvB;AAAgC,MAAA,QAAQ,EAAEP,IAAI,CAACQ;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAOH","sourcesContent":["import React from 'react';\nimport Article from \"../../components/articles/single\";\nimport Banner from \"../../components/hero/\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useRouter } from \"next/router\";\n\n\nconst articleQuery = gql`\nquery ArticleQuery( $id: ID! ){\n    articlePage{\n         hero{\n             title\n             subTitle\n             background{\n                 url\n             }\n\n         }\n     }\n     featured: articles(sort: \"created_at\" ,where: {featured:true}){\n    id\n    published_at\n    featured\n    header{\n    \ttitle\n    \tsubTitle\n        longSubTitle\n    \tthumbnail{\n      \turl\n    \t}\n        mainMedia{\n            url\n        }\n      \n    }\n    \n  }\n      article(id:$id ){\n      id\n      published_at\n      featured\n      header{\n          title\n          subTitle\n          longSubTitle\n          thumbnail{\n            url\n          }\n        mainMedia{\n          url\n        }\n        \n      }\n        body {\n        ... on ComponentTextMedia{\n          caption\n          media {\n            url\n          }\n          meta\n          __typename\n        }\n        ... on ComponentTextQuote{\n        content\n        __typename\n       }\n        ... on ComponentTextParagraph{\n          content\n          __typename\n        }\n      }\n    }\n      \n  }\n`\n\n\nexport default function articles() {\n    const router = useRouter();\n    const article_id = router.query.id;\n\n    if(article_id==null)\n    return null;\n\n\n    const { data, loading } = useQuery(articleQuery, {\n        variables: { id: article_id },\n    })\n\n    if (loading)\n        return <Loading/>\n        let hero =data.articlePage.hero;\n         hero.title= `${hero.title}`;\n         hero.subTitle= \"\";\n          \n    return (\n        <>\n            <Banner hero={data.articlePage.hero} children={null} />\n            <Article article={data.article} featured={data.featured}/>\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}