{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kal/Documents/Development/Taxiye-front/components/landing/testimony/slider.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Slider from \"react-slick\";\nimport Card from \"./card\";\nconst settings = {\n  dots: true,\n  infinite: true,\n  centerPadding: 20,\n  className: \"center\",\n  centerMode: false,\n  speed: 500,\n  slidesToShow: 3,\n  slidesToScroll: 1,\n  responsive: [{\n    breakpoint: 1060,\n    settings: {\n      slidesToShow: 2\n    }\n  }, {\n    breakpoint: 650,\n    settings: {\n      initialSlide: 2,\n      slidesToShow: 1\n    }\n  }]\n};\n\nconst TestimonySlider = ({\n  testimonies\n}) => {\n  return /*#__PURE__*/_jsxDEV(Slider, _objectSpread(_objectSpread({}, settings), {}, {\n    children: testimonies.map(testimony => /*#__PURE__*/_jsxDEV(Card, {\n      testimony: testimony\n    }, testimony.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this))\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TestimonySlider;","map":{"version":3,"sources":["/home/kal/Documents/Development/Taxiye-front/components/landing/testimony/slider.tsx"],"names":["React","Slider","Card","settings","dots","infinite","centerPadding","className","centerMode","speed","slidesToShow","slidesToScroll","responsive","breakpoint","initialSlide","TestimonySlider","testimonies","map","testimony","id"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAGA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,IAAI,EAAE,IADO;AAEbC,EAAAA,QAAQ,EAAE,IAFG;AAGbC,EAAAA,aAAa,EAAC,EAHD;AAIbC,EAAAA,SAAS,EAAE,QAJE;AAKbC,EAAAA,UAAU,EAAE,KALC;AAMbC,EAAAA,KAAK,EAAE,GANM;AAObC,EAAAA,YAAY,EAAE,CAPD;AAQbC,EAAAA,cAAc,EAAE,CARH;AASbC,EAAAA,UAAU,EAAE,CAAC;AACXC,IAAAA,UAAU,EAAE,IADD;AAEXV,IAAAA,QAAQ,EAAE;AACNO,MAAAA,YAAY,EAAE;AADR;AAFC,GAAD,EAKX;AACCG,IAAAA,UAAU,EAAE,GADb;AAECV,IAAAA,QAAQ,EAAE;AACNW,MAAAA,YAAY,EAAE,CADR;AAENJ,MAAAA,YAAY,EAAE;AAFR;AAFX,GALW;AATC,CAAjB;;AAuBA,MAAMK,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AACzC,sBACE,QAAC,MAAD,kCAAYb,QAAZ;AAAA,cACKa,WAAW,CAACC,GAAZ,CAAiBC,SAAD,iBACf,QAAC,IAAD;AAAyB,MAAA,SAAS,EAAEA;AAApC,OAAWA,SAAS,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,YADD;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;AAUA,eAAeJ,eAAf","sourcesContent":["import React from \"react\";\nimport Slider from \"react-slick\";\nimport Card from \"./card\";\n\n\nconst settings = {\n    dots: true,\n    infinite: true,\n    centerPadding:20,\n    className: \"center\",\n    centerMode: false,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    responsive: [{\n      breakpoint: 1060,\n      settings: {\n          slidesToShow: 2\n      }\n  }, {\n      breakpoint: 650,\n      settings: {\n          initialSlide: 2,\n          slidesToShow: 1\n      }\n  }]\n  };\n\nconst TestimonySlider = ({testimonies}) => {\n  return (\n    <Slider {...settings}>\n        {testimonies.map((testimony) => (\n          <Card key={testimony.id} testimony={testimony} />\n        ))}\n      </Slider>\n  );\n};\n\nexport default TestimonySlider;\n"]},"metadata":{},"sourceType":"module"}